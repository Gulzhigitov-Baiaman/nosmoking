import { serve } from "https://deno.land/std@0.190.0/http/server.ts";

const corsHeaders = {
  "Access-Control-Allow-Origin": "*",
  "Access-Control-Allow-Headers": "authorization, x-client-info, apikey, content-type",
};

serve(async (req) => {
  if (req.method === "OPTIONS") {
    return new Response(null, { headers: corsHeaders });
  }

  try {
    const { email, subscriptionId, trialEnd } = await req.json();
    
    const resendApiKey = Deno.env.get("RESEND_API_KEY");
    const origin = req.headers.get("origin") || "https://xzcrzqyhubrsndopnzxj.supabase.co";
    
    const response = await fetch("https://api.resend.com/emails", {
      method: "POST",
      headers: {
        "Authorization": `Bearer ${resendApiKey}`,
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
      from: "Premium <noreply@lovable.app>",
      to: [email],
      subject: "üéâ –í—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ Premium-–ø–æ–¥–ø–∏—Å–∫—É!",
      html: `
        <!DOCTYPE html>
        <html>
          <head>
            <style>
              body { font-family: Arial, sans-serif; background: #f0f9f4; padding: 20px; }
              .container { max-width: 600px; margin: 0 auto; background: white; border-radius: 16px; overflow: hidden; box-shadow: 0 4px 20px rgba(0,0,0,0.1); }
              .header { background: linear-gradient(135deg, #10b981, #059669); padding: 40px 20px; text-align: center; }
              .header h1 { color: white; margin: 0; font-size: 28px; }
              .crown { font-size: 48px; }
              .content { padding: 40px 30px; }
              .feature { display: flex; align-items: center; margin: 15px 0; }
              .feature-icon { font-size: 24px; margin-right: 12px; }
              .trial-box { background: #fef3c7; border: 2px solid #fbbf24; border-radius: 12px; padding: 20px; margin: 20px 0; text-align: center; }
              .footer { background: #f9fafb; padding: 20px; text-align: center; color: #6b7280; font-size: 14px; }
              .button { display: inline-block; background: #10b981; color: white; padding: 14px 32px; border-radius: 8px; text-decoration: none; font-weight: bold; margin: 20px 0; }
            </style>
          </head>
          <body>
            <div class="container">
              <div class="header">
                <div class="crown">üëë</div>
                <h1>–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å Premium!</h1>
              </div>
              
              <div class="content">
                <p>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!</p>
                <p>–í–∞—à–∞ Premium-–ø–æ–¥–ø–∏—Å–∫–∞ —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞. –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è!</p>
                
                <div class="trial-box">
                  <h3 style="margin: 0 0 10px 0; color: #d97706;">üéÅ 3 –¥–Ω—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ</h3>
                  <p style="margin: 0; font-size: 14px;">
                    –£ –≤–∞—Å –µ—Å—Ç—å 3 –¥–Ω—è, —á—Ç–æ–±—ã –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏.<br>
                    –ü–µ—Ä–≤—ã–π –ø–ª–∞—Ç–µ–∂ –±—É–¥–µ—Ç —Å–ø–∏—Å–∞–Ω <strong>${new Date(trialEnd).toLocaleDateString('ru-RU')}</strong>
                  </p>
                  <p style="margin: 10px 0 0 0; font-size: 13px; color: #6b7280;">
                    –ù–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å? –û—Ç–º–µ–Ω–∏—Ç–µ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç ‚Äî –¥–µ–Ω—å–≥–∏ –≤–µ—Ä–Ω—É—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.
                  </p>
                </div>
                
                <h3>–ß—Ç–æ –¥–æ—Å—Ç—É–ø–Ω–æ –≤ Premium:</h3>
                <div class="feature"><span class="feature-icon">üìÖ</span> –ö–∞–ª–µ–Ω–¥–∞—Ä—å –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —Å –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–µ–π</div>
                <div class="feature"><span class="feature-icon">üí¨</span> –û–±—â–∏–π —á–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏</div>
                <div class="feature"><span class="feature-icon">üë•</span> –î—Ä—É–∑—å—è –∏ –ª–∏–¥–µ—Ä–±–æ—Ä–¥—ã</div>
                <div class="feature"><span class="feature-icon">üìä</span> –ü–ª–∞–Ω –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ–≥–æ —Å–Ω–∏–∂–µ–Ω–∏—è</div>
                <div class="feature"><span class="feature-icon">ü§ñ</span> AI-–ø–ª–∞–Ω (–ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π)</div>
                <div class="feature"><span class="feature-icon">üìÑ</span> PDF –æ—Ç—á—ë—Ç—ã –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ</div>
                <div class="feature"><span class="feature-icon">üèÜ</span> –ß–µ–ª–ª–µ–Ω–¥–∂–∏ –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è</div>
                <div class="feature"><span class="feature-icon">‚≠ê</span> –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞</div>
                
                <div style="text-align: center;">
                  <a href="${origin}/dashboard" class="button">–ü–µ—Ä–µ–π—Ç–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ</a>
                </div>
                
                <p style="margin-top: 30px; font-size: 14px; color: #6b7280;">
                  <strong>ID –ø–æ–¥–ø–∏—Å–∫–∏:</strong> ${subscriptionId}<br>
                  <strong>–°—Ç–æ–∏–º–æ—Å—Ç—å:</strong> ‚Ç©9,990 / –º–µ—Å—è—Ü<br>
                  <strong>–°–ª–µ–¥—É—é—â–∏–π –ø–ª–∞—Ç–µ–∂:</strong> ${new Date(trialEnd).toLocaleDateString('ru-RU')}
                </p>
              </div>
              
              <div class="footer">
                <p>–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ —á–µ—Ä–µ–∑ —Ä–∞–∑–¥–µ–ª "–ü–æ–¥–¥–µ—Ä–∂–∫–∞" –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏.</p>
                <p style="margin-top: 10px;">¬© 2025 Quit Smoking App. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.</p>
              </div>
            </div>
          </body>
        </html>
      `,
      })
    });

    if (!response.ok) {
      const error = await response.text();
      throw new Error(`Resend API error: ${error}`);
    }

    const data = await response.json();

    return new Response(JSON.stringify({ sent: true, data }), {
      headers: { ...corsHeaders, "Content-Type": "application/json" },
      status: 200,
    });
  } catch (error) {
    console.error("Email error:", error);
    return new Response(JSON.stringify({ error: error instanceof Error ? error.message : String(error) }), {
      headers: { ...corsHeaders, "Content-Type": "application/json" },
      status: 500,
    });
  }
});
